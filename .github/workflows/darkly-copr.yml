# Build Darkly and publish release
name: Darkly Fedora COPR build
on:
  schedule:
    - cron: "0 00 * * *" # At 00:00 daily
env:
  COPR_PROJECT: darkly
  COPR_USERNAME: deltacopy
  COPR_URL: https://copr.fedorainfracloud.org
  PACKAGE_UTILS_REPO: darkly-packager
  PACKAGE_UTILS_REPO_OWNER: deltacopy
  RELEASE_TAG: latest
jobs:
  copr-ci:
    runs-on: ubuntu-latest
    container: fedora:latest
    steps:
      - name: Checkout packager utils repository
        uses: actions/checkout@v4.2.0
        with:
          repository: ${{ env.PACKAGE_UTILS_REPO_OWNER }}/${{ env.PACKAGE_UTILS_REPO }}

      - name: Install dependencies
        run: sudo dnf install -y -q copr-cli python3 git gawk

      - name: Update package files
        run: |
          case "${{ env.RELEASE_TAG }}" in
            latest)
              python packager.py --dist fedora
              RELEASE_LATEST_VERSION=$(cat packager.log | grep "Latest tag =" | awk -F "=" {'print $2'} | xargs)
              test ! -z "$RELEASE_LATEST_VERSION" && echo "LATEST_TAG=${RELEASE_LATEST_VERSION#?}" | tee -a "$GITHUB_ENV" || exit 1
            ;;
            *)
              python packager.py --dist fedora --tag ${{ env.RELEASE_TAG }}
              RELEASE_LATEST_VERSION=$(cat packager.log | grep "Latest tag =" | awk -F "=" {'print $2'} | xargs)
              test ! -z "$RELEASE_LATEST_VERSION" && echo "LATEST_TAG=${RELEASE_LATEST_VERSION#?}" | tee -a "$GITHUB_ENV" || exit 1
            ;;
          esac

      - name: Update copr-cli configuration
        run: |
          mkdir $HOME/.config
          cat <<EOF > $HOME/.config/copr
          [copr-cli]
          login = ${{ secrets.COPR_BUILD_L }}
          username = ${{ env.COPR_USERNAME }}
          token = ${{ secrets.COPR_BUILD_T }}
          copr_url = ${{ env.COPR_URL }}
          EOF
      - name: Get latest COPR build information
        run: |
          LATEST_COPR=$(copr-cli get-package ${{ env.COPR_USERNAME }}/${{ env.COPR_PROJECT }} --name ${{ env.COPR_PROJECT }} | python -c 'import json,sys;obj=json.load(sys.stdin);print(obj["latest_build"]["source_package"]["version"]);')

          echo "Latest COPR version = ${LATEST_COPR%-*}"
          echo "Latest Git tag release = ${{ env.LATEST_TAG }}"

          # convert the versions removing the decimal points to ease in comparing them

          copr_version=$(echo "${LATEST_COPR%-*}" | awk -F. '{printf "%03d%03d%03d\n", $1, $2, $3}')
          git_version=$(echo "${{ env.LATEST_TAG }}" | awk -F. '{printf "%03d%03d%03d\n", $1, $2, $3}')

          if [[ $copr_version < $git_version ]] || [[ -z "$LATEST_COPR" ]]; then
              echo "START_BUILD=true" >> "$GITHUB_ENV"
              echo "Starting COPR build"
          else
              echo "START_BUILD=false" >> "$GITHUB_ENV"
              echo "Skipping COPR build"
          fi

      - name: Start COPR build
        if: env.START_BUILD == 'true'
        run: |
          echo "Starting COPR build"
          copr-cli build ${{ env.COPR_PROJECT }} output/COPR/specs/${{ env.COPR_PROJECT }}.spec
